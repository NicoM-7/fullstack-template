version: "3.8"

services:
  nginx:
    profiles:
      - production
    image: ${NGINX_IMAGE}
    container_name: ${NGINX_CONTAINER_NAME}
    restart: always
    volumes:
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d/default.conf
      - ${CERT_PATH}:/etc/ssl/certs/cert.pem
      - ${KEY_PATH}:/etc/ssl/private/key.pem
    ports:
      - "${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}"
      - "${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}"
    networks:
      - web

  frontend:
    build:
      context: ${FRONTEND_DIRECTORY}
      dockerfile: ${FRONTEND_DOCKERFILE}
    image: ${FRONTEND_IMAGE}
    container_name: ${FRONTEND_CONTAINER_NAME}
    restart: always
    env_file:
      - ${FRONTEND_ENV_FILE}
    networks:
      - web

  backend:
    build:
      context: ${BACKEND_DIRECTORY}
      dockerfile: ${BACKEND_DOCKERFILE}
    image: ${BACKEND_IMAGE}
    container_name: ${BACKEND_CONTAINER_NAME}
    restart: always
    env_file:
      - ${BACKEND_ENV_FILE}
    networks:
      - web
      - private

  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - private

volumes:
  postgres-data:

networks:
  web:
  private: